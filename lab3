import React, { useState } from 'react';
import { Text, View, StyleSheet, FlatList, Platform } from 'react-native';
import {
  GestureHandlerRootView,
  TapGestureHandler,
  LongPressGestureHandler,
} from 'react-native-gesture-handler';

export default function App() {
  const [score, setScore] = useState(0);
  const [clicks, setClicks] = useState(0);
  const [doubleClicks, setDoubleClicks] = useState(0);
  const [longPressDone, setLongPressDone] = useState(false);

  const handleSingleTap = () => {
    setScore(prev => prev + 1);
    setClicks(prev => prev + 1);
  };

  const handleDoubleTap = () => {
    setScore(prev => prev + 2);
    setDoubleClicks(prev => prev + 1);
  };

  const handleLongPress = () => {
    if (!longPressDone) {
      setScore(prev => prev + 5);
      setLongPressDone(true);
    }
  };

  const tasks = [
    { id: '1', text: '–ó—Ä–æ–±–∏—Ç–∏ 10 –∫–ª—ñ–∫—ñ–≤', done: clicks >= 10 },
    { id: '2', text: '–ó—Ä–æ–±–∏—Ç–∏ –ø–æ–¥–≤—ñ–π–Ω–∏–π –∫–ª—ñ–∫ 5 —Ä–∞–∑—ñ–≤', done: doubleClicks >= 5 },
    { id: '3', text: "–£—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –æ–±'—î–∫—Ç 3 —Å–µ–∫—É–Ω–¥–∏", done: longPressDone },
    { id: '4', text: '–û—Ç—Ä–∏–º–∞—Ç–∏ 100 –æ—á–æ–∫', done: score >= 100 },
  ];

  return (
    <GestureHandlerRootView style={{ flex: 1 }}>
      <View style={styles.container}>
        <Text style={styles.title}>–û—á–∫–∏: {score}</Text>

        <LongPressGestureHandler
          onHandlerStateChange={({ nativeEvent }) => {
            if (nativeEvent.state === 4) handleLongPress();
          }}
          minDurationMs={3000}
        >
          <TapGestureHandler
            numberOfTaps={2}
            onActivated={handleDoubleTap}
          >
            <TapGestureHandler
              numberOfTaps={1}
              onActivated={handleSingleTap}
            >
              <View style={styles.clicker}>
                <Text style={styles.clickerText}>üéØ</Text>
              </View>
            </TapGestureHandler>
          </TapGestureHandler>
        </LongPressGestureHandler>

        <Text style={styles.subtitle}>–ó–∞–≤–¥–∞–Ω–Ω—è:</Text>
        <FlatList
          data={tasks}
          keyExtractor={item => item.id}
          renderItem={({ item }) => (
            <Text style={{ color: item.done ? 'green' : 'white' }}>
              {item.text}
            </Text>
          )}
        />
      </View>
    </GestureHandlerRootView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#1b1b1b',
    alignItems: 'center',
    justifyContent: 'flex-start',
    padding: 20,
    paddingTop: Platform.OS === 'android' ? 40 : 60, // –≤—ñ–¥—Å—Ç—É–ø –∑–≥–æ—Ä–∏
  },
  title: {
    fontSize: 28,
    color: '#fff',
    marginBottom: 20,
  },
  subtitle: {
    fontSize: 20,
    color: '#ccc',
    marginTop: 30,
    marginBottom: 10,
  },
  clicker: {
    backgroundColor: '#333',
    width: 120,
    height: 120,
    borderRadius: 60,
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 20,
  },
  clickerText: {
    fontSize: 48,
  },
});
